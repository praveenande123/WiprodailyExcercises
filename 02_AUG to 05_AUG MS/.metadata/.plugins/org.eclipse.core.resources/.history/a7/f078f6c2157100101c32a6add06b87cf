package com.wipro.orderms.controller;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;

import com.wipro.orderms.entity.Order;
import com.wipro.orderms.service.OrderService;
import com.wipro.payment_ms.entity.Payment;

@RestController
@RequestMapping("/order")
public class OrderController {
	@Autowired
	OrderService orderService;
	
    @PostMapping
    public ResponseEntity<Order> createOrder(@RequestBody Order order) {
    
    	
    	order.setOrderStatus("I");
    	orderService.save(order);

        Payment payment = new Payment();
        payment.setOrderId(order.getId());

        RestTemplate restTemplate = new RestTemplate();
        String paymentUrl = "http://localhost:9011/payment";

        try {
            ResponseEntity<Payment> response = restTemplate.postForEntity(paymentUrl, payment, Payment.class);
            if (response.getStatusCode() == HttpStatus.OK && response.getBody().isPaymentStatus()) {
                order.setOrderStatus("P");
            } else {
                order.setOrderStatus("C");
            }
        } catch (Exception e) {
            order.setOrderStatus("C");
        }

        return ResponseEntity.ok(order);
    }
    
    @GetMapping
    public ResponseEntity<List<Order>> getAllOrdersWithPayments() {
        List<Order> orders = orderService.findAll();
        RestTemplate restTemplate = new RestTemplate();

        for (Order order : orders) {
            String url = "http://localhost:9011/payment/order/" + order.getId(); // Your Payment MS endpoint
            try {
                Payment[] payments = restTemplate.getForObject(url, Payment[].class);
                order.setPayment(Arrays.asList(payments));
            } catch (Exception e) {
                order.setPayment(Collections.emptyList()); // Graceful fallback
            }
        }

        return ResponseEntity.ok(orders);
    }

}